# Generated by Django 2.2 on 2021-05-23 12:06

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import eshop.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='User ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatar', validators=[eshop.models.validate_image], verbose_name='User Avatar')),
                ('gender', models.BooleanField(choices=[(True, 'Male'), (False, 'Female')], default=True, verbose_name='Gender')),
                ('phone_no', models.CharField(max_length=12, verbose_name='Contact No. ')),
                ('address', models.TextField(max_length=350, verbose_name='Address')),
                ('State', models.CharField(max_length=50, verbose_name='State ')),
                ('City', models.CharField(max_length=50, verbose_name='City')),
                ('pin_code', models.CharField(max_length=8, verbose_name='Zip Code')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Category',
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=200, verbose_name='Category')),
                ('category_img', models.ImageField(blank=True, null=True, upload_to='category', validators=[eshop.models.validate_image], verbose_name='Category Image')),
                ('slug', models.SlugField(editable=False, unique=True, verbose_name='Slug ')),
            ],
            options={
                'verbose_name': 'Category',
                'ordering': ['category_name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_amount', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Total Order Amount')),
                ('order_status', models.CharField(choices=[('P', 'Paid'), ('U', 'Unpaid')], default='U', max_length=20, verbose_name='Order Status')),
                ('phone_no', models.CharField(max_length=12, verbose_name='Contact No. ')),
                ('address', models.TextField(max_length=350, verbose_name='Address')),
                ('State', models.CharField(max_length=50, verbose_name='State ')),
                ('City', models.CharField(max_length=50, verbose_name='City')),
                ('pin_code', models.CharField(max_length=8, verbose_name='Zip Code')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Order Creation Date Time')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User (FK)')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prod_name', models.CharField(max_length=30, verbose_name='Product Name')),
                ('prod_desc', models.CharField(max_length=2000, verbose_name='Product Description')),
                ('prod_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Product Price/Piece')),
                ('prod_img', models.ImageField(blank=True, null=True, upload_to='product', validators=[eshop.models.validate_image], verbose_name='Product Image')),
                ('q_o_h', models.PositiveIntegerField(default=0, verbose_name='Quantity On Hand')),
                ('slug', models.SlugField(editable=False, unique=True, verbose_name='Slug ')),
            ],
            options={
                'verbose_name': 'Product',
                'ordering': ['prod_name'],
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(choices=[('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('XL', 'Extra Large'), ('XXL', 'Extra Extra Large')], max_length=10, verbose_name='Product Size')),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_category_name', models.CharField(max_length=200, verbose_name='Sub Category')),
                ('sub_category_img', models.ImageField(blank=True, null=True, upload_to='sub_category', validators=[eshop.models.validate_image], verbose_name='Sub Category Image')),
                ('slug', models.SlugField(editable=False, unique=True, verbose_name='Slug ')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eshop.Category', verbose_name='Category (FK)')),
            ],
            options={
                'verbose_name': 'Sub Category',
                'ordering': ['sub_category_name'],
            },
        ),
        migrations.CreateModel(
            name='SizeProductMAp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eshop.Product', verbose_name='Product (FK)')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eshop.Size', verbose_name='Size (FK)')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Rating ')),
                ('review', models.TextField(max_length=300, null=True, verbose_name='Review ')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Date')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eshop.Product', verbose_name='Product (FK)')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User (FK)')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prod_img', models.ImageField(blank=True, null=True, upload_to='product_img', validators=[eshop.models.validate_image], verbose_name='Product Image')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eshop.Product', verbose_name='Product (FK)')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='sub_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eshop.SubCategory', verbose_name='Sub Category (FK)'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay_date', models.DateTimeField(auto_now_add=True, verbose_name='Payment Date')),
                ('pay_status', models.CharField(choices=[('P', 'Paid'), ('U', 'Unpaid')], default='U', max_length=20, verbose_name='Payment Status')),
                ('pay_info', models.CharField(max_length=300, null=True, verbose_name='Payment Info')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eshop.Order', verbose_name='Order (FK)')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(max_length=10, verbose_name='Size')),
                ('quantity', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)], verbose_name='Quantity ')),
                ('item_total', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Total Per Item')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eshop.Order', verbose_name='Order (FK)')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eshop.Product', verbose_name='Product (FK)')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(max_length=10, verbose_name='Size')),
                ('quantity', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)], verbose_name='Quantity ')),
                ('item_total', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Total Per Item')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eshop.Product', verbose_name='Product (FK)')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User (FK)')),
            ],
        ),
    ]
